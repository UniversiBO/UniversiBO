# -*- mode: ruby -*-
# vi: set ft=ruby :

unless Vagrant.has_plugin?('vagrant-vbguest')
  raise 'Please run "vagrant plugin install vagrant-vbguest" before'
end

Vagrant.configure("2") do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "debian/stretch64"

  config.vm.provider :virtualbox do |v|
    # Setting VM name and increasing RAM size
    v.customize [
      "modifyvm", :id,
      "--memory", "2048",
      "--name"  , "UniversiBO Vagrant Box"
    ]
    # Boot with a GUI so you can see the screen. (Default is headless)
    # v.gui = true

    # without this symlinks can't be created on the shared folder
    v.customize [
      "setextradata", :id,
      "VBoxInternal2/SharedFoldersEnableSymlinksCreate/v-root", "1"
    ]
  end

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network :private_network, ip: "192.168.33.10"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8888" will access port 80 on the guest machine.
  config.vm.network :forwarded_port, guest: 80, host: 8888

  # Vagrant root
  config.vm.synced_folder "..", "/vagrant", id: "vagrant-root", type: "nfs"

  # Run Ansible from the Vagrant VM
  config.vm.provision "ansible_local" do |ansible|
    ansible.playbook = "vagrant/ansible/playbook.yml"
    ansible.galaxy_role_file = "vagrant/ansible/requirements.yml"
    ansible.sudo = true
  end
end
